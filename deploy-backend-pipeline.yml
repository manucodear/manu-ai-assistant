# deploy.yml
trigger: none

# schedules:
# - cron: "0 2 * * *"    # every day at 2 AM UTC
#   displayName: "Nightly Deploy"
#   branches:
#     include:
#       - main
#   always: true

variables:
  registryName: "manucode"   # <-- your ACR name
  resourceGroup: "manu-assistant-resource-group"

resources:
  pipelines:
    - pipeline: buildPipeline
      source: manu-assistant-build-main
      trigger: none

stages:
  - stage: Deploy
    displayName: "Deploy Backend & Frontend"
    jobs:
      - job: Deploy
        displayName: "Deploy Application"
        steps:

          # -------------------------------
          # Login to Azure
          # -------------------------------
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'azure-service-connection'
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                echo "Logged in to Azure"
            displayName: "Azure CLI Login"

          # -------------------------------
          # Install jq
          # -------------------------------
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'azure-service-connection'
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                sudo apt-get update && sudo apt-get install -y jq
            displayName: "Install jq"

          # -------------------------------
          # Get ACR login server
          # -------------------------------
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'azure-service-connection'
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                LOGIN_SERVER=$(az acr show \
                  --name $(registryName) \
                  --resource-group $(resourceGroup) \
                  --query loginServer \
                  --output tsv)
                echo "LOGIN_SERVER=$LOGIN_SERVER"
                echo "##vso[task.setvariable variable=LOGIN_SERVER]$LOGIN_SERVER"
            displayName: "Get ACR Login Server"

          # -------------------------------
          # Download all build artifacts
          # -------------------------------
          - download: buildPipeline
            displayName: "Download all build artifacts"

          # -------------------------------
          # Deploy Backend
          # -------------------------------
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'azure-service-connection'
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                BACKEND_IMAGE_TAG=$(jq -r '.imageTag' $(Pipeline.Workspace)/backend-image-metadata/backend_image_metadata.json)
                echo "Backend image tag: $BACKEND_IMAGE_TAG"
                echo "##vso[task.setvariable variable=BACKEND_IMAGE_TAG]$BACKEND_IMAGE_TAG"

                az containerapp update \
                  --name manu-assistant-container-backend \
                  --resource-group $(resourceGroup) \
                  --image $(LOGIN_SERVER)/manu-assistant-app-backend:$BACKEND_IMAGE_TAG
            displayName: "Deploy Backend Container App"

          # -------------------------------
          # Deploy Frontend
          # -------------------------------
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'azure-service-connection'
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                FRONTEND_IMAGE_TAG=$(jq -r '.imageTag' $(Pipeline.Workspace)/frontend-image-metadata/frontend_image_metadata.json)
                echo "Frontend image tag: $FRONTEND_IMAGE_TAG"
                echo "##vso[task.setvariable variable=FRONTEND_IMAGE_TAG]$FRONTEND_IMAGE_TAG"

                az containerapp update \
                  --name manu-assistant-container-website \
                  --resource-group $(resourceGroup) \
                  --image $(LOGIN_SERVER)/manu-assistant-app-frontend:$FRONTEND_IMAGE_TAG
            displayName: "Deploy Frontend Container App"
